;; I wrote and made a video about my setup. You can check it here:
;; https://afadingthought.substack.com/p/turbocharge-your-productivity-with
{ 
        :profiles {
                :Default {
                        :default true

                        :sim     30     ;; simultaneous key press threshold (def: 50)
                                        ;; simlayer is implemented with to_if_alone and simultaneous key press feature
                                        ;; if keydown event for two different keys are pressed within :sim ms, the keypresses are considered simultaneous
                                        ;; simultaneous_threshold_milliseconds (def: 50)
                                        ;; different from simlayers, this is for cases like [:a :b]
                        :delay   130    ;; to_delayed_action_delay_milliseconds (def: 500)
                                        ;; basically it means time after which the key press is count delayed
                                        ;; after :delay ms, the key press is considered to be delayed
                                        ;; (used for double-press macros)
                                        ; NOTE: this should be equal to :held for mod-tap layers
                        :held    130    ;; to_if_held_down_threshold_milliseconds (def: 500)
                                        ;; key is fired twice when :held ms is elapsed (otherwise seen as a hold command) (TODO WHAT IS THIS??)
                                        ;; useful for knowing when escape term finishes with caps mode.
                                        ; NOTE: this should be equal to :delay for mod-tap layers
                        :alone   129    ;; to_if_alone_timeout_milliseconds (def: 1000)
                                        ;; affects to_if_alone behavior
                                        ;; simlayer is implemented with to_if_alone and simultaneous key press feature
                                        ;; if keyup event comes within :alone ms from keydown, the key is not just pressed but held
                                        ; NOTE: (I think) this must be just less than the delay / held value to avoid bug where mod-tap layer stays 1
                }
                }
        :simlayer-threshold 30
        :templates {
                :alfred "osascript -e 'tell application id \"com.runningwithcrayons.Alfred\" to run trigger \"%s\" in workflow \"%s\" with argument \"%s\"'"
                :btt "osascript -e 'tell application \"BetterTouchTool\"' -e 'trigger_named \"%s\"' -e 'end tell'"
                :km "osascript -e 'tell application \"Keyboard Maestro Engine\" to do script \"%s\"'"
                :open "open \"%s\""
                :open-g "open -g \"%s\""
                :ts "osascript -e 'tell application \"System Events\" to keystroke \"c\" using {command down}' -e 'delay 0.1' -e 'tell application \"textsoapAgent\" to set oldTextValue to the Clipboard' -e 'tell application \"textsoapAgent\" to set newTextValue to cleanText oldTextValue with \"%s\"' -e 'tell application \"textsoapAgent\" to set the Clipboard to newTextValue' -e 'tell application \"System Events\" to keystroke \"v\" using {command down}'"
                ;;Pay attention that the Shortcut input goes before the Shortcut name.
                :sc "echo \"%s\"|shortcuts run \"%s\" -i -"
                :yabai "/opt/homebrew/bin/yabai -m %s"
                }
        :applications {
                :arc ["company.thebrowser.Browser"]
                :terminal ["com.apple.Terminal"]
                :finalcutpro ["com.apple.FinalCut"]
                }
        ;;:simlayers {
        ;;      :w-mode {:key :w :condi [:!f19-mode :!caps-modew :!m-mode :!a-mode :!sd-mode]}
        ;;  }
        :main [
       {:des "Mode or Layers Creation"
                :rules [
        ;;DEL MODE - Made like this since I need it to work with modifiers and could not figure out how to do it as template. Works on F19 SuperKey and on SD Mode
                [:##semicolon ["del-mode" 1] [:!w-mode :!spacebarpress :!caps-mode :!m-mode :!a-mode] {:afterup ["del-mode" 0] :alone {:key :semicolon :repeat false}}]
        ;;CAPS & F19 MODES: Quick tap CAPS = ESCAPE and CAPS MODE. Held = f19 for Superkey Seek (closes CAPS MODE).
                [:##caps_lock ["caps-mode" 1] [:!del-mode :!f19-mode :!m-mode :!a-mode :!sd-mode :!w-mode] {:afterup [["caps-mode" 0] ["f19-mode" 0]] :alone {:key :escape} :held [["caps-mode" 0] ["f19-mode" 1] {:key :f19}] :params {:held 160 :delay 160 :alone 159}}]
         ;;M MODE: Markdown and Text Transformations
                [:m nil [:!del-mode :!f19-mode :!caps-mode :!a-mode :!sd-mode :!w-mode] {:alone {:key :m :halt true} :delayed {:canceled {:key :m}} :held {:set ["m-mode" 1] :repeat false} :afterup {:set ["m-mode" 0]}}]
        ;;A MODE: ToolVox AI
                [:a nil [:!del-mode :!f19-mode :!caps-mode :!m-mode :!sd-mode :!w-mode] {:alone {:key :a :halt true} :delayed {:canceled {:key :a}} :held {:set ["a-mode" 1] :repeat false} :afterup {:set ["a-mode" 0]}}]                      
        ;;SD MODE: Text, Window, and Tabs Navigation (Super Duper Mode)
               [{:sim [:s :d] :simo {:interrupt true :dorder :insensitive :uorder :insensitive :afterup {:set ["sd-mode" 0]}} :modi {:optional :any}} {:set ["sd-mode" 1]} [:!del-mode :!f19-mode :!caps-mode :!m-mode :!a-mode :!w-mode]]
        ;;W MODE: Window Management
                [:w nil [:!del-mode :!f19-mode :!caps-mode :!m-mode :!a-mode :!sd-mode] {:alone {:key :w :halt true} :delayed {:canceled {:key :w}} :held {:set ["w-mode" 1] :repeat false} :afterup {:set ["w-mode" 0]}}]   
              ]
       },
        {:des "Delete Shortcuts"
                :rules [
                        [:!Sright_shift :caps_lock [:!w-mode :!caps-mode :!m-mode :!a-mode]]
                        [:!PSright_shift :caps_lock [:!w-mode :!caps-mode :!m-mode :!a-mode]]
                        [:##right_shift :right_shift [:!w-mode :!caps-mode :!m-mode :!a-mode] {:alone {:key :delete_forward}}]
                        [:##left_shift :left_shift [:!w-mode :!caps-mode :!m-mode :!a-mode] {:alone {:key :delete_or_backspace}}]
                ;;the del-mode layer
                        [:condi :del-mode :!terminal] [:##a :!Odelete_or_backspace]
                        [:condi :del-mode :terminal] [:##a :!Tw]
                ]},
        {:des "F19 Mode - (Seek from Superkey)"
                :rules [:f19-mode
                ;;Let's move our modifiers up a few rows.
                [:##a nil nil {:alone {:key :a :halt true} :delayed {:canceled {:key :a}} :held {:key :left_control}}]
                [:##s nil nil {:alone {:key :s :halt true} :delayed {:canceled {:key :s}} :held {:key :left_option}}]
                [:##d nil nil {:alone {:key :d :halt true} :delayed {:canceled {:key :d}} :held {:key :left_command}}]
                ;;Let's recover our escape key by holding spacebar + e, and go back to caps mode with it.
                [:spacebar nil nil {:alone {:key :spacebar :halt true} :delayed {:canceled [{:key :spacebar} {:set ["spacebarpress" 0]}]} :held {:set ["spacebarpress" 1]} :afterup {:set ["spacebarpress" 0]}}]
                [:##e [["caps-mode" 1] {:key :escape}] [["spacebarpress" 1] ["f19-mode" 1]]]
                ;;Easier to tap backspace deletes on left command
                [:##left_command :delete_or_backspace]
                ;;Easier to tap tab on right command
                [:##right_command :tab]
                ;;Let's type Spanish characters with spacebar as modifier, just as pressing escape.
                ;;I am deactivating this tab to get used to the other one in this mode.
                [:##tab :vk_none]
                [:condi :spacebarpress :f19-mode]
                [:semicolon [:!On :n]]
                [:quote :!Oe]
                ]},
        {:des "Caps Mode Rules - Lasts only for a few milliseconds"
                :rules [:caps-mode
                ;;Spanish Characters.
                        [:semicolon [:!On :n]]
                        [:quote :!Oe]
                ;;Mouse Click or Focus
                        [:v [:yabai "window --focus mouse"]]
                        ;;[:v {:pkey :button1}]
                ;;Screen saver on ","
                        [:comma nil nil {:afterup [:alfred "screensaver" "com.chubamisc.afred"]}]
                ;Sleep system with double tap period or single for sleep display
                        [:period [:alfred "sleepsystem" "com.chubamisc.afred"] ["sleep-press" 1]]
                        [:period [["sleep-press" 1]] nil {:delayed {:invoked [["sleep-press" 0] [:alfred "sleepscreen" "com.chubamisc.afred"]] :canceled ["sleep-press" 0]} :params {:delay 200}}]
                ;;Most used Alfred Workflows, Shortcuts and Macros
                        [:i [:km "DC6A4949-C8D1-4024-AC50-74D34142C8AC"]]
                        [:p [:btt "plexupdate"]]
                        [:d [:sc "" "Day One Master"]]
                        [:g [:alfred "google" "com.chubamisc.afred"]]
                        [:l [:alfred "getlink" "com.chubamisc.afred"]]
                        [:w [[:btt "DeleteBearNote" :km "E8A1245C-1BEA-4C49-AB39-EDA2E59714CD"]]]
                        [:c [:alfred "caff" "com.shawn.patrick.rice.caffeinate.control"]]
                        [:b [:btt "ClearMenuBar"]]
                        [:n [:btt "CloseNotifications"]]
                        [:m [:alfred "menu" "com.tedwise.menubarsearch"]]
                        [:spacebar [:sc "∞nn∞" "Capture"]]
                        [:right_shift :!TOCn]
                ;;Homerow and Seek
                        [:h :!Of18]
                        [:j :!Cf18]
                        [:k :!Tf18]
                ;;Media Buttons on numbers
                        [:equal_sign :volume_increment]
                        [:hyphen :volume_decrement]
                        [:0 :mute]
                        [:9 :fastforward]
                        [:8 :play_or_pause]
                        [:7 :rewind]
                        [:6 :vk_none]
                        [:5 :vk_none]
                        [:4 :launchpad]
                        [:3 :mission_control]
                        [:2 :display_brightness_increment]
                        [:1 :display_brightness_decrement]
                ;;CMD + 1 & 2 for Keyboard Illumination
                        [:!C2 :illumination_increment]
                        [:!C1 :illumination_decrement]
                ]}, 
        {:des "M Mode - Markdown"
                :rules [:m-mode
                        [:grave_accent_and_tilde [:ts "Code Line"]]
                        [:!Rgrave_accent_and_tilde [:ts "Code Block"]]
                        [:!S9 [:ts "Parenthesis"]]
                        [:open_bracket [:ts "Brackets"]]
                        [:!Sopen_bracket [:ts "Curly Brackets"]]
                        [:t [:ts "Title Case"]]
                        [:u [:ts "Uppercase"]]
                        [:i [:ts "Italics"]]
                        [:l [:km "BD69C99E-1E65-42BB-89B4-AFC8036F98D6"]]
                        [:!Sl [:ts "Link Removal"]]
                        [:quote [:ts "Single Quotes"]]
                        [:!Squote [:ts "Double Quotes"]]
                        [:b [:ts "Bold"]]
                ;;Enclose options
                        [:e [:!Tf17]]
                ;;KM Search and Replace
                        [:r [:km "8C2B33A2-79E1-4702-87CC-6D0A3ACB3194"]]
                ;;Simple options
                        [:s [:!Cf17]]
                ;;Case options
                        [:c [:!Of17]]
                ;;TextSoap Window
                        [:spacebar [:!COf17]]
                ]},
        {:des "A Mode"
                :rules [:a-mode
                        [:r [["rpress" 1]] [["cpress" 0]["bpress" 0]] {:afterup {:set ["rpress" 0]}}]
                        [:b [["bpress" 1]] [["rpress" 0]["cpress" 0]] {:afterup {:set ["bpress" 0]}}]
                        [:c [["cpress" 1]] [["rpress" 0]["bpress" 0]] {:afterup {:set ["cpress" 0]}}]
                ;;REPLACE
                ;;Selected text as Input for Asking
                        [:spacebar [:alfred "replace_ask" "com.toolvoxai.this"] ["rpress" 1]]
                ;;Selected text as Prompt
                        [:p [:alfred "replace_prompt" "com.toolvoxai.this"] ["rpress" 1]]
                ;;Selected text as Input for Menu
                        [:m [:alfred "replace_menu" "com.toolvoxai.this"] ["rpress" 1]]
                ;;BELOW
                ;;Selected text as Input for Asking
                        [:spacebar [:alfred "below_ask" "com.toolvoxai.this"] ["bpress" 1]]
                ;;Selected text as Prompt
                        [:p [:alfred "below_prompt" "com.toolvoxai.this"] ["bpress" 1]]
                ;;Selected text as Input for Menu
                        [:m [:alfred "below_menu" "com.toolvoxai.this"] ["bpress" 1]]
                ;;CHAT
                ;;Selected text as Input for Asking
                        [:spacebar [:alfred "chat_ask" "com.toolvoxai.this"] ["cpress" 1]]
                ;;Selected text as Prompt
                        [:p [:alfred "chat_prompt" "com.toolvoxai.this"] ["cpress" 1]]
                ;;Selected text as Input for Menu
                        [:m [:alfred "chat_menu" "com.toolvoxai.this"] ["cpress" 1]]
                ;;WITHOUT MODIFIERS
                ;;Menu With Nothing
                        [:m [:sc "" "ToolVox AI"] [["rpress" 0]["bpress" 0]["cpress" 0]]]
                ;;Ask Anything
                        [:spacebar [:sc "•dc•" "ToolVox AI"] [["rpress" 0]["bpress" 0]["cpress" 0]]]
                ]},
        {:des "SuperDuper Mode Rules"
                :rules [:sd-mode
                ;;Arrows
                        [:##h :left_arrow :!terminal]
                        [:##j :down_arrow :!terminal]
                        [:##k :up_arrow :!terminal]
                        [:##l :right_arrow :!terminal]
                ;;Modifiers and Deletes
                        ;;We exclude arc here, because the way to exit while in app switching outside of arc involves holding Command (in order not to select currect selected app), in app window switching needs control
                        [:##caps_lock :!Cescape :!arc]
                        [:##spacebar :left_shift]
                        [:##f :left_command :!terminal]
                        [:##a :left_option :!terminal]
                        [:##n :delete_or_backspace :!terminal]
                        [:#OPperiod :delete_forward :!terminal]
                        ;;This one is the only way to delete from current point to the end of line. Acts like command + delete forward.
                        [:!Cperiod [:!Tk] :!terminal]
                        ;;I want to try having a control key easy to reach in SD mode.
                        [:##c :left_control]
                ;;Tab Navigation (Arc has its separate rule for this)
                        [:##i :!Ttab :!arc]
                        [:##u :!STtab :!arc]
                ;;Window Navigation (Arc has its separate rule for this)
                        [:##y :!SOtab :!arc]
                        [:##o :!Otab :!arc]
                ;;App Navigation
                        [:##m :!Ctab]
                        [:##comma :!CStab]
                ;;Let's Recover some common keys that will allow us quit or close apps while holding down control or command
                        [:##7 :h]
                        [:##8 :m]
                        [:##9 :w]
                        [:##0 :q]
                ;;Tab Nav for ARC
                        [:condi :arc :sd-mode]
                        [:##u [:!COdown_arrow]]
                        [:##i [:!COup_arrow]]
                        [:##y [:!STtab]]
                        [:##o [:!Ttab]]
                        ;;Since we ecluded it above
                        [:##caps_lock :!Tescape]
                ;;For Terminal
                        [:condi :terminal :sd-mode]
                        [:##f [["cpress" 1]] nil {:afterup {:set ["cpress" 0]}}]
                        [:##a [["opress" 1]] nil {:afterup {:set ["opress" 0]}}]
                        [:##h :left_arrow [["cpress" 0]["opress" 0]]]
                        [:##h :!Ta [["cpress" 1]["opress" 0]]]
                        [:##h :!Oleft_arrow [["cpress" 0]["opress" 1]]]
                        [:##l :right_arrow [["cpress" 0]["opress" 0]]]
                        [:##l :!Te [["cpress" 1]["opress" 0]]]
                        [:##l :!Oright_arrow [["cpress" 0]["opress" 1]]]
                        [:##n :delete_or_backspace [["cpress" 0]["opress" 0]]]
                        [:##n :!Tu [["cpress" 1]["opress" 0]]]
                        [:##n :!Tw [["cpress" 0]["opress" 1]]]
                        [:##period :delete_forward [["cpress" 0]["opress" 0]]]
                        [:##period :!Tk [["cpress" 1]["opress" 0]]]
                        ;;Terminal profile must use Option as meta for next one to work. In settings, profile, keyboard, in Terminal. 
                        [:##period :!Od [["cpress" 0]["opress" 1]]]
                        [:##j :down_arrow]
                        [:##k :up_arrow]
                ]},
        {:des "W Mode"
                :rules [:w-mode
                ;;YABAI SERVER
                        [:caps_lock "/opt/homebrew/bin/yabai --stop-service" [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                        [:!Ccaps_lock "/opt/homebrew/bin/yabai --start-service" [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                        [:tab "/opt/homebrew/bin/yabai --restart-service" [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                ;;STACKLINE Icons Toggle
                        [:x "/opt/homebrew/bin/hs -c 'stackline.config:toggle(\"appearance.showIcons\")'" [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                ;;FOCUS Shifting with F
                        [:f [["fpress" 1]] [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]] {:afterup {:set ["fpress" 0]}}]
                        [:h [:yabai "window --focus west"] ["fpress" 1]]
                        [:j [:yabai "window --focus south"] ["fpress" 1]]
                        [:k [:yabai "window --focus north"] ["fpress" 1]]
                        [:l [:yabai "window --focus east"] ["fpress" 1]]
                ;;FOCUS Cycle Forward & Backward ON WINDOWS with F - Excludes floating or Going inside Stacks
                        [:y "~/Library/CloudStorage/Dropbox/2-Areas/SystemAndApps/Yabai/cycleFocusNoStackCounter.sh" ["fpress" 1]]
                        [:o "~/Library/CloudStorage/Dropbox/2-Areas/SystemAndApps/Yabai/cycleFocusNoStackClock.sh" ["fpress" 1]]
                ;;FOCUS Cycle Forward & Backward ON WINDOWS with F - Includes floating and Going inside Stacks
                        [:n "~/Library/CloudStorage/Dropbox/2-Areas/SystemAndApps/Yabai/cycleFocusAllForward.sh" ["fpress" 1]]
                        [:period "~/Library/CloudStorage/Dropbox/2-Areas/SystemAndApps/Yabai/cycleFocusAllBackward.sh" ["fpress" 1]]
                ;;FOCUS Cycle IN STACKS with F   
                        [:i [:yabai "window --focus stack.prev || /opt/homebrew/bin/yabai -m window --focus stack.last"] ["fpress" 1]]
                        [:u [:yabai "window --focus stack.next || /opt/homebrew/bin/yabai -m window --focus stack.first"] ["fpress" 1]]    
                ;;OPACITY LOCK OR RESET with F
                        [:m [:yabai "window --opacity 1.0"] ["fpress" 1]]
                        [:comma [:yabai "window --opacity 0.0"] ["fpress" 1]]
                ;;SWAP Windows with G
                        [:g [["gpress" 1]] [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["fpress" 0]] {:afterup {:set ["gpress" 0]}}]
                        [:h [:yabai "window --swap west"] ["gpress" 1]]
                        [:j [:yabai "window --swap south"] ["gpress" 1]]
                        [:k [:yabai "window --swap north"] ["gpress" 1]]
                        [:l [:yabai "window --swap east"] ["gpress" 1]]
                ;;STACK Windows with D
                        [:d [["dpress" 1]] [["cpress" 0]["vpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]] {:afterup {:set ["dpress" 0]}}]
                        [:h [:yabai "window west --stack $(/opt/homebrew/bin/yabai -m query --windows --window | /opt/homebrew/bin/jq -r '.id')"] ["dpress" 1]]
                        [:j [:yabai "window south --stack $(/opt/homebrew/bin/yabai -m query --windows --window | /opt/homebrew/bin/jq -r '.id')"] ["dpress" 1]]
                        [:k [:yabai "window north --stack $(/opt/homebrew/bin/yabai -m query --windows --window | /opt/homebrew/bin/jq -r '.id')"] ["dpress" 1]]
                        [:l [:yabai "window east --stack $(/opt/homebrew/bin/yabai -m query --windows --window | /opt/homebrew/bin/jq -r '.id')"] ["dpress" 1]]
                ;;INSERTION Point with D
                        [:y [:yabai "window --insert west"] ["dpress" 1]]
                        [:u [:yabai "window --insert south"] ["dpress" 1]]
                        [:i [:yabai "window --insert north"] ["dpress" 1]]
                        [:o [:yabai "window --insert east"] ["dpress" 1]]
                        ;;INSERTION as Stack
                        [:right_shift [:yabai "window --insert stack"] ["dpress" 1]]
                        ;;INSERTION as Float
                        [:spacebar "~/Library/CloudStorage/Dropbox/2-Areas/SystemAndApps/Yabai/InsertAsFloat.sh" ["dpress" 1]]
                        ;;[:spacebar [:yabai "signal --add label=float_next_window_created event=window_created action='/opt/homebrew/bin/yabai -m signal --remove float_next_window_created; /opt/homebrew/bin/yabai -m signal --remove float_next_application_launched; /opt/homebrew/bin/yabai -m window $YABAI_WINDOW_ID --toggle float --grid 4:4:1:1:2:2 --layer below'"] ["dpress" 1]]
                ;;ROTATE Arrangement with R
                        [:r [["rpress" 1]] [["cpress" 0]["vpress" 0]["dpress" 0]["gpress" 0]["fpress" 0]] {:afterup {:set ["rpress" 0]}}]
                        [:h [:yabai "space --rotate 90"] ["rpress" 1]]
                        [:l [:yabai "space --rotate 270"] ["rpress" 1]]
                ;;ROTATE Windows within Arrangement with R
                        [:j "~/Library/CloudStorage/Dropbox/2-Areas/SystemAndApps/Yabai/cycleWindowsOnlyclockwise.sh" ["rpress" 1]]
                        [:k "~/Library/CloudStorage/Dropbox/2-Areas/SystemAndApps/Yabai/cycleWindowsOnlycounter.sh" ["rpress" 1]]
                ;;RESIZE Windows with R
                        [:y [:yabai "window --resize right:-50:0 2> /dev/null || /opt/homebrew/bin/yabai -m window --resize left:-50:0 2> /dev/null"] ["rpress" 1]]
                        [:u [:yabai "window --resize bottom:0:50 2> /dev/null || /opt/homebrew/bin/yabai -m window --resize top:0:50 2> /dev/null"] ["rpress" 1]]
                        [:i [:yabai "window --resize bottom:0:-50 2> /dev/null || /opt/homebrew/bin/yabai -m window --resize top:0:-50 2> /dev/null"] ["rpress" 1]]
                        [:o [:yabai "window --resize right:50:0 2> /dev/null || /opt/homebrew/bin/yabai -m window --resize left:50:0 2> /dev/null"] ["rpress" 1]]
                ;;MOVE Windows with Nothing
                        [:h [:yabai "window --warp west"] [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                        [:j [:yabai "window --warp south"] [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                        [:k [:yabai "window --warp north"] [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                        [:l [:yabai "window --warp east"] [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                ;;MIRROR on Axis with Nothing
                        [:u [:yabai "space --mirror y-axis"] [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                        [:i [:yabai "space --mirror x-axis"] [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                ;;SWITCH to Previous or Next Space with Nothing
                        [:m [:yabai "space --focus prev"] [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                        ;;[:n [:!Tleft_arrow] [["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                        [:comma [:yabai "space --focus next"] [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                        ;;[:period [:!Tright_arrow] [["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                ;;THROW Window to previous or next space and GO with G
                        [:m [:yabai "window --space prev; /opt/homebrew/bin/yabai -m space --focus prev"] ["gpress" 1]]
                        ;;[:m [:yabai "window --space prev; /opt/homebrew/bin/yabai -m query --spaces --space prev | /opt/homebrew/bin/jq -r '.windows[0] // empty' | xargs /opt/homebrew/bin/yabai -m window --focus"] [["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                        [:comma [:yabai "window --space next; /opt/homebrew/bin/yabai -m space --focus next"] ["gpress" 1]]
                        ;;[:comma [:yabai "window --space next; /opt/homebrew/bin/yabai -m query --spaces --space next | /opt/homebrew/bin/jq -r '.windows[0] // empty' | xargs /opt/homebrew/bin/yabai -m window --focus"] [["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                ;;THROW Window to previous or next space and DON'T GO with D
                        [:m [:yabai "window --space prev"] ["dpress" 1]]
                        [:comma [:yabai "window --space next"] ["dpress" 1]]
                ;;SWITCH to First, Last, or Recent Space with Nothing
                        [:n [:yabai "space --focus first"] [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                        [:period [:yabai "space --focus last"] [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                        [:right_shift [:yabai "space --focus recent"] [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                ;;THROW Window to First or Last Space and GO with G
                        [:n [:yabai "window --space first; /opt/homebrew/bin/yabai -m space --focus first"] ["gpress" 1]]
                        [:period [:yabai "window --space last; /opt/homebrew/bin/yabai -m space --focus last"] ["gpress" 1]]
                ;;THROW Window to First or Last Space and DON'T GO with D
                        [:n [:yabai "window --space first"] ["dpress" 1]]
                        [:period [:yabai "window --space last"] ["dpress" 1]]
                ;;CREATE spaces with Nothing
                        [:semicolon [:yabai "space --create && echo \"refresh\" | nc -U /tmp/yabai-indicator.socket"] [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                        [:quote [:yabai "space --create && echo \"refresh\" | nc -U /tmp/yabai-indicator.socket && /opt/homebrew/bin/yabai -m space --focus last"] [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                ;;CREATE Space, Throw Window and Go or Don't with G and D
                        [:semicolon [:yabai "space --create && echo \"refresh\" | nc -U /tmp/yabai-indicator.socket && /opt/homebrew/bin/yabai -m window --space last && /opt/homebrew/bin/yabai -m space --focus last"] ["gpress" 1]]
                        [:semicolon [:yabai "space --create && echo \"refresh\" | nc -U /tmp/yabai-indicator.socket && /opt/homebrew/bin/yabai -m window --space last"] ["dpress" 1]]
                ;;DESTROY spaces with Nothing                        
                        [:!Csemicolon [:yabai "space --destroy \"$(yabai -m query --spaces --display | jq -r 'map(select(.\"has-focus\" == true))[0].index')\""] [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]                
                        [:!Cquote [:yabai "space --destroy last"] [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]                
                ;;SWITCH to Specific Space with CMD
                        [:!Cu [:yabai "space --focus 7"] [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                        [:!Ci [:yabai "space --focus 8"] [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                        [:!Co [:yabai "space --focus 9"] [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                        [:!Cj [:yabai "space --focus 4"] [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                        [:!Ck [:yabai "space --focus 5"] [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                        [:!Cl [:yabai "space --focus 6"] [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                        [:!Cm [:yabai "space --focus 1"] [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                        [:!Ccomma [:yabai "space --focus 2"] [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                        [:!Cperiod [:yabai "space --focus 3"] [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                ;;THROW Window to specific window and Go with V
                        [:v [["vpress" 1]] [["cpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]] {:afterup {:set ["vpress" 0]}}]
                        [:u [:yabai "window --space 7; /opt/homebrew/bin/yabai -m space --focus 7"] ["vpress" 1]]
                        [:i [:yabai "window --space 8; /opt/homebrew/bin/yabai -m space --focus 8"] ["vpress" 1]]
                        [:o [:yabai "window --space 9; /opt/homebrew/bin/yabai -m space --focus 9"] ["vpress" 1]]
                        [:j [:yabai "window --space 4; /opt/homebrew/bin/yabai -m space --focus 4"] ["vpress" 1]]
                        [:k [:yabai "window --space 5; /opt/homebrew/bin/yabai -m space --focus 5"] ["vpress" 1]]
                        [:l [:yabai "window --space 6; /opt/homebrew/bin/yabai -m space --focus 6"] ["vpress" 1]]
                        [:m [:yabai "window --space 1; /opt/homebrew/bin/yabai -m space --focus 1"] ["vpress" 1]]
                        [:comma [:yabai "window --space 2; /opt/homebrew/bin/yabai -m space --focus 2"] ["vpress" 1]]
                        [:period [:yabai "window --space 3; /opt/homebrew/bin/yabai -m space --focus 3"] ["vpress" 1]]
                ;;THROW Window to specific window and DON'T GO with C
                        [:c [["cpress" 1]] [["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]] {:afterup {:set ["cpress" 0]}}]
                        [:u [:yabai "window --space 7"] ["cpress" 1]]
                        [:i [:yabai "window --space 8"] ["cpress" 1]]
                        [:o [:yabai "window --space 9"] ["cpress" 1]]
                        [:j [:yabai "window --space 4"] ["cpress" 1]]
                        [:k [:yabai "window --space 5"] ["cpress" 1]]
                        [:l [:yabai "window --space 6"] ["cpress" 1]]
                        [:m [:yabai "window --space 1"] ["cpress" 1]]
                        [:comma [:yabai "window --space 2"] ["cpress" 1]]
                        [:period [:yabai "window --space 3"] ["cpress" 1]]
                ;;TOGGLE Maximizing to Parent with R
                        [:return_or_enter [:yabai "window --toggle zoom-parent"] ["rpress" 1]]
                ;;TOGGLE Maximizing Full with Nothing
                        [:return_or_enter "~/Library/CloudStorage/Dropbox/2-Areas/SystemAndApps/Yabai/ToggleMaximize.sh" [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                ;;TOGGLE Real Fullscreen with BTT with F
                        [:return_or_enter [:btt "RealFull"] ["fpress" 1]]
                ;;TOGGLE Layout as Stack or tiles with Command
                        [:!Creturn_or_enter "/opt/homebrew/bin/yabai -m space --layout \"$(/opt/homebrew/bin/yabai -m query --spaces --space | /opt/homebrew/bin/jq -r 'if .type == \"bsp\" then \"stack\" else \"bsp\" end')\"" [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                ;;TOGGLE Float with nothing
                        [:spacebar "~/Library/CloudStorage/Dropbox/2-Areas/SystemAndApps/Yabai/ToggleFloatAndCenter.sh" [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                ;;TOGGLE Split (horizontal or vertical) with Command
                        [:!Ct [[:yabai "window --toggle split"]] [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                ;;TOGGLE Padding with nothing
                        [:t [[:yabai "space --toggle padding; /opt/homebrew/bin/yabai -m space --toggle gap"]] [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                ;;TOGGLE Below or Normal Layer with Shift
                        [:q "layer=\"$(/opt/homebrew/bin/yabai --message query --windows --window | /opt/homebrew/bin/jq --raw-output .layer)\" && /opt/homebrew/bin/yabai --message window --layer \"$([ \"$layer\" = 'below' ] && echo 'normal' || echo 'below')\"" [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                ;;RESET Balance with nothing
                        [:b [[:yabai "space --balance"]] [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                ;;SHOW Desktop or Mission Control with Nothing
                        [:##e :mission_control [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                ;;HIDE ALL with R
                        [:e [:btt "HideAll"] ["rpress" 1]]
                ;;HIDE current window or all other windows with nothing
                        [:o :!Ch [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                        [:y :!COh [["cpress" 0]["vpress" 0]["dpress" 0]["rpress" 0]["gpress" 0]["fpress" 0]]]
                        [:1 [:yabai "query --windows --window > ~/Desktop/yabai_output.txt"]]
                ]},
        {:des "Final Cut Pro"
                :rules [ :finalcutpro
                        [:!CSm :!T1]
                        [:!CScomma :!T2]
                        [:!CSperiod :!T3]
                        [:!CSj :!T4]
                        [:!CSk :!T5]
                        [:!CSl :!T6]
                        [:!CSu :!T7]
                        [:!CSi :!T8]
                        [:!CSo :!T9]
                ]
        }
        {:des "F buttons with FN"
                :rules [
                ;;Numbers + FN = F Keys
                        [:!Fequal_sign :f12]
                        [:!Fhyphen :f11]
                        [:!F0 :f10]
                        [:!F9 :f9]
                        [:!F8 :f8]
                        [:!F7 :f7]
                        [:!F6 :f6]
                        [:!F5 :f5]
                        [:!F4 :f4]
                        [:!F3 :f3]
                        [:!F2 :f2]
                        [:!F1 :f1]
                ]}                           
        ]
}

;; !  | means mandatory
    ;; #  | means optional
    ;; C  | left_command
    ;; T  | left_control
    ;; O  | left_option
    ;; S  | left_shift
    ;; F  | fn
    ;; Q  | right_command
    ;; W  | right_control
    ;; E  | right_option
    ;; R  | right_shift
    ;; P  | caps_lock
    ;; !! | mandatory command + control + optional + shift (hyper)
    ;; ## | optional any
